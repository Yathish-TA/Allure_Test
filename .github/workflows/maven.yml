name: Java CI with Maven Template

# This is a sample template for Java CI with Maven, which includes:
# - Triggering the workflow on push to certain branches
# - Running the workflow on pull requests
# - Scheduling periodic builds
# - Manually triggering the workflow via workflow_dispatch

on:
  # Trigger the workflow on push events
  push:
    branches:
      - main  # Trigger the workflow when changes are pushed to the 'main' branch
      - develop  # You can add any other branches you need to trigger on here

  # Trigger the workflow on pull request events
  pull_request:
    branches:
      - main  # Trigger the workflow when a pull request is opened/updated for the 'main' branch

  # Trigger the workflow on a schedule (cron syntax)
  schedule:
    # Run the workflow at 2 AM UTC every day
    - cron: '0 2 * * *'  # This is the cron expression for 2 AM UTC daily
    # You can modify the cron expression to suit your timing requirements.
    # Example for 6 PM UTC every day: '0 18 * * *'
    # Example for every Sunday at 5 AM UTC: '0 5 * * 0'

  # Trigger the workflow manually using the workflow_dispatch event
  workflow_call:
    inputs:
      java-version:
        description: 'Java version to be used for the build (e.g., 17, 21)'
        required: true
        default: '17'  # Default to Java 17 if not specified
        type: string   # Define the type as string
      customBuildName:
        description: 'Provide a custom build name'
        required: true
        default: 'Manual_Run'
        type: string   # Define the type as string
      suiteXmlFile:
        description: 'Path to the Maven test suite XML file'
        required: true
        default: 'src/test/java/web/resources/testrunner/Single_Browser_Parallel.xml'
        type: string   # Define the type as string
      appUnderTest:
        description: 'App under test (e.g., wcs.prod)'
        required: true
        default: 'wcs.prod'
        type: string   # Define the type as string
      browserstack-config:
        description: 'Path to BrowserStack config file'
        required: true
        default: 'browserstack_web_chrome.yml'
        type: string   # Define the type as string
      qtest-update:
        description: 'Do you want to update the status to QTest?'
        required: false
        default: 'No'
        type: choice   # Define the type as choice
        options:
          - 'Yes'
          - 'No'
      qtest-project-name:
        description: 'The project name in QTest (only if QTest update is Yes)'
        required: false
        default: 'Sample Project'
        type: choice   # Define the type as choice
        options:
          - 'Sample Project'
          - 'HRIS'
          - 'Integration'
          - 'Logistics'
          - 'Omnichannel'
          - 'POS'
          - 'SAP'
      qtest-test-suite-id-and-name:
        description: 'Test suite ID and name in QTest (only if QTest update is Yes)'
        required: false
        default: ''
        type: string   # Define the type as string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}  # Pass the java version as input
          distribution: 'temurin'
          cache: maven

      - name: Set up BrowserStack Environment
        uses: browserstack/github-actions/setup-env@master
        with:
          username: ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

      - name: BrowserStack Local Tunnel Setup
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: "start"
          local-logging-level: "all-logs"
          local-identifier: "random"

      - name: Set Workflow Build Name on BrowserStack
        run: echo "BROWSERSTACK_BUILD_NAME=${{ inputs.customBuildName }}-$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn test \
          -DsuiteXmlFile="${{ inputs.suiteXmlFile }}" \
          -DappUnderTest="${{ inputs.appUnderTest }}" \
          -Dbrowserstack.config="${{ inputs.browserstack-config }}" \
          -Dcucumber.filter.tags="@ProdTSC" \
          -DupdateStatus="${{ inputs.qtest-update }}" \
          -DprojectName="${{ inputs.qtest-project-name }}" \
          -DtestSuiteIdAndName="${{ inputs.qtest-test-suite-id-and-name }}"
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_KEY_VAULT_NAME: ${{ secrets.AZURE_KEY_VAULT_NAME }}

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        with:
          name: Allure-test-report
          path: allure-report/index.html
          if-no-files-found: warn
          overwrite: true
        if: always()
